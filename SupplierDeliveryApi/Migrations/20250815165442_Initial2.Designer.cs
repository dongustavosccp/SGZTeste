// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplierDeliveryAPI.Infrastructure;

#nullable disable

namespace SupplierDeliveryAPI.Migrations
{
    [DbContext(typeof(SupplierDeliveryDbContext))]
    [Migration("20250815165442_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Delivery", b =>
                {
                    b.Property<int>("IdDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDelivery"));

                    b.Property<string>("DsStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.HasKey("IdDelivery");

                    b.HasIndex("IdSupplier");

                    b.ToTable("Deliveries", (string)null);
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.DeliveryAddress", b =>
                {
                    b.Property<int>("IdDelivery")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDelivery");

                    b.ToTable("DeliveryAddresses", (string)null);
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.DeliveryProduct", b =>
                {
                    b.Property<int>("IdDelivery")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("QtProduct")
                        .HasColumnType("int");

                    b.HasKey("IdDelivery", "IdProduct");

                    b.HasIndex("IdProduct");

                    b.ToTable("DeliveryProducts", (string)null);
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NmProduct")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("IdProduct");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<string>("NmSupplier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSupplier");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Delivery", b =>
                {
                    b.HasOne("SupplierDeliveryAPI.Domain.Supplier", "Supplier")
                        .WithMany("Deliveries")
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.DeliveryAddress", b =>
                {
                    b.HasOne("SupplierDeliveryAPI.Domain.Delivery", "Delivery")
                        .WithOne("Address")
                        .HasForeignKey("SupplierDeliveryAPI.Domain.DeliveryAddress", "IdDelivery")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.DeliveryProduct", b =>
                {
                    b.HasOne("SupplierDeliveryAPI.Domain.Delivery", "Delivery")
                        .WithMany("Products")
                        .HasForeignKey("IdDelivery")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplierDeliveryAPI.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Delivery", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SupplierDeliveryAPI.Domain.Supplier", b =>
                {
                    b.Navigation("Deliveries");
                });
#pragma warning restore 612, 618
        }
    }
}
